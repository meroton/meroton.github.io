"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3749],{7:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"improved-chroot-in-buildbarn/reproducing-the-problem","title":"VI Reproducing the Problem","description":"This document explains how to reproduce the problem and try the patches","source":"@site/docs/improved-chroot-in-buildbarn/reproducing-the-problem.md","sourceDirName":"improved-chroot-in-buildbarn","slug":"/improved-chroot-in-buildbarn/reproducing-the-problem","permalink":"/docs/improved-chroot-in-buildbarn/reproducing-the-problem","draft":false,"unlisted":false,"editUrl":"https://github.com/meroton/docs/edit/main/docs/improved-chroot-in-buildbarn/reproducing-the-problem.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"VI Reproducing the Problem","sidebar_position":6},"sidebar":"sidebar","previous":{"title":"V Integrating Mountat in Buildbarn","permalink":"/docs/improved-chroot-in-buildbarn/integrating-mountat"}}');var o=r(4848),i=r(8453);const s={title:"VI Reproducing the Problem",sidebar_position:6},c="Reproducing the Problem",d={},l=[{value:"Problem statement and preliminaries",id:"problem-statement-and-preliminaries",level:2},{value:"Build yourself an /usr/bin/env for fun and profit",id:"build-yourself-an-usrbinenv-for-fun-and-profit",level:2},{value:"Build remotely",id:"build-remotely",level:2},{value:"Apply the patches",id:"apply-the-patches",level:2},{value:"The pull requests are applied through the go_dependencies",id:"the-pull-requests-are-applied-through-the-go_dependencies",level:3},{value:"You can also use a local checkout and override the repository",id:"you-can-also-use-a-local-checkout-and-override-the-repository",level:3},{value:"Run the reproduction with the bare deployment",id:"run-the-reproduction-with-the-bare-deployment",level:2},{value:"Successful build",id:"successful-build",level:3}];function a(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"reproducing-the-problem",children:"Reproducing the Problem"})}),"\n",(0,o.jsx)(n.p,{children:"This document explains how to reproduce the problem and try the patches\nwhile they are improved and submitted.\nOnce the pull requests are merged this will not be needed\nand will stand just as another interesting technical rabbit hole."}),"\n",(0,o.jsx)(n.h2,{id:"problem-statement-and-preliminaries",children:"Problem statement and preliminaries"}),"\n",(0,o.jsxs)(n.p,{children:["The problem statement is simple:\nprograms that use ",(0,o.jsx)(n.code,{children:"/proc"})," cannot run in ",(0,o.jsx)(n.code,{children:"chroot"}),".\nIt should be easy to create a reproduction."]}),"\n",(0,o.jsxs)(n.p,{children:["However, there are not publicly available programs that create a user-space input root.\nThis is something that ",(0,o.jsx)(n.em,{children:"middleware"})," could do,\nbut requires a lot of code."]}),"\n",(0,o.jsxs)(n.p,{children:["What options do we have?\nUse the ",(0,o.jsx)(n.code,{children:"go"}),"-compiler, a ",(0,o.jsx)(n.code,{children:"bash"})," script to call ",(0,o.jsx)(n.code,{children:"ls /proc/self"}),", or compile a statically linked binary to do the same.\nThe ",(0,o.jsx)(n.a,{href:"https://github.com/bazelbuild/rules_go/",children:"rules_go"})," toolchain builds a hermetic go compiler and sends that in the input root,\nso it is a good candidate.\nHowever it uses the system ",(0,o.jsx)(n.code,{children:"gcc"})," to compile it.\nAnd we get errors that ",(0,o.jsx)(n.code,{children:"gcc"})," is not available.\nAn interpreted program like ",(0,o.jsx)(n.code,{children:"bash"})," does not work either,\nas we do not have the interpreter available."]}),"\n",(0,o.jsxs)(n.p,{children:["Thankfully it is simple to create a statically linked ",(0,o.jsx)(n.code,{children:"go"})," program."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'go_binary(\n    ...\n    pure = "on",\n)\n'})}),"\n",(0,o.jsxs)(n.p,{children:["And we can use the eminent ",(0,o.jsx)(n.a,{href:"https://docs.aspect.build/rules/aspect_bazel_lib/docs/run_binary/",children:"run_binary"})," rule,\nwhich does not require ",(0,o.jsx)(n.code,{children:"bash"})," to execute a tool.\nWe use the compiled program directly as a source in the ",(0,o.jsx)(n.code,{children:"tool"})," attribute.\nIf we were to use ",(0,o.jsx)(n.code,{children:"native_binary"})," we get snagged up by a ",(0,o.jsx)(n.code,{children:"bash"})," dependency\nin its ",(0,o.jsx)(n.code,{children:"CopyFile"})," action."]}),"\n",(0,o.jsxs)(n.p,{children:["But with this we fail, here is the output from ",(0,o.jsx)(n.code,{children:"bb-browser"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"  Command^*\n\n        Arguments:       ./ls-proc bazel-out/k8-fastbuild/bin/out\n  Environment variables: PATH=/bin:/usr/bin:/usr/local/bin\n\n  Result\n\n  Status: Code 3: Failed to run command: Failed to start process: fork\n          /exec /usr/bin/env: no such file or directory\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This is because ",(0,o.jsx)(n.code,{children:"Buildbarn"})," itself wraps the process with ",(0,o.jsx)(n.code,{children:"/usr/bin/env"}),".\n",(0,o.jsx)(n.a,{href:"https://github.com/buildbarn/bb-remote-execution/blob/master/pkg/runner/local_runner_unix.go#L110",children:"Here"})," ",(0,o.jsx)(n.code,{children:"env"})," is used for PATH resolution before ",(0,o.jsx)(n.code,{children:"chroot"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"build-yourself-an-usrbinenv-for-fun-and-profit",children:"Build yourself an /usr/bin/env for fun and profit"}),"\n",(0,o.jsxs)(n.p,{children:["Thankfully ",(0,o.jsx)(n.code,{children:"busybox"})," has easy to use programs, that can help in a pinch,\nespecially the ",(0,o.jsx)(n.code,{children:"musl"})," versions."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'$ docker run -v .:/out busybox:musl sh -c "cp /usr/bin/env /out/env"\n$ file env\nenv: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, stripped\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Now we just need to put it in the input root as ",(0,o.jsx)(n.code,{children:"/usr/bin/env"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"$ mkdir -p usr/bin\n$ mv env usr/bin/\n"})}),"\n",(0,o.jsx)(n.p,{children:'With the "introspection" target'}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'run_binary(\n    name = "introspection",\n    outs = ["out"],\n    args = ["$(location out)"],\n    execution_requirements = {\n        "no-cache": "1",\n    },\n    tool = ":ls-proc",\n    srcs = [\n        # env is required in path resolution for chroot actions.\n        "usr/bin/env",\n        # Not strictly needed, but symmetric with sys and proc.\n        "dev/dummy",\n        # Send a directory for /sys and /proc\n        # Bazel wants a file for it to send the directory.\n        "sys/dummy",\n        "proc/dummy",\n    ],\n)\n'})}),"\n",(0,o.jsxs)(n.p,{children:["This ",(0,o.jsx)(n.code,{children:"introspection"})," target is ",(0,o.jsx)(n.a,{href:"https://github.com/stagnation/bb-deployments/commit/4bd72af1b75c3e75acdcd612396b352d1188e186",children:"available to cherry-pick"})," for ",(0,o.jsx)(n.code,{children:"bb-deployments"}),"\nwhere I bootstrap and test the functionality in ",(0,o.jsx)(n.code,{children:"bb-remote-execution"}),".\nSee ",(0,o.jsx)(n.a,{href:"https://github.com/stagnation/bb-deployments/commits/feature/reproduce-bb-remote-execution-115/",children:"this branch"})," for more."]}),"\n",(0,o.jsx)(n.h2,{id:"build-remotely",children:"Build remotely"}),"\n",(0,o.jsxs)(n.p,{children:["With the customary ",(0,o.jsx)(n.code,{children:"docker-compose"})," setup."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'$ bazel build \\\n    --remote_executor=grpc://localhost:8980 \\\n    --remote_instance_name=fuse \\\n    --remote_default_exec_properties OSFamily=linux \\\n    --remote_default_exec_properties container-image="docker://ghcr.io/catthehacker/ubuntu:act-22.04@sha256:5f9c35c25db1d51a8ddaae5c0ba8d3c163c5e9a4a6cc97acd409ac7eae239448" \\\n    @//:introspection\nAction details (uncached result): http://localhost:7984/fuse/blobs/sha256/historical_execute_response/598e3f5ad5548d7cbae6cb7918b0ce02c4dee92db0b8b11ab01835d9090ed33d-884/\n2024/03/26 15:14:24 Reading /proc/self:open /proc/self: no such file or directory\nTarget //:introspection failed to build\n'})}),"\n",(0,o.jsxs)(n.p,{children:["This works with regular runners,\nbut not ",(0,o.jsx)(n.code,{children:"chroot"})," runners."]}),"\n",(0,o.jsx)(n.h2,{id:"apply-the-patches",children:"Apply the patches"}),"\n",(0,o.jsxs)(n.p,{children:["A setback! The docker-compose setup does not build the docker images,\nso we would have to create deliverables from the pull requests,\nwhich is tedious.\nInstead we use the ",(0,o.jsx)(n.code,{children:"bare"})," deployment\nwhere we do compile the ",(0,o.jsx)(n.code,{children:"runner"})," from source."]}),"\n",(0,o.jsx)(n.h3,{id:"the-pull-requests-are-applied-through-the-go_dependencies",children:"The pull requests are applied through the go_dependencies"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'     go_repository(\n         name = "com_github_buildbarn_bb_remote_execution",\n         importpath = "github.com/buildbarn/bb-remote-execution",\n-        sum = "h1:BKoGfhCfn5IA4JRLMB7I4yHsM06fLvOc/zwzSxEuNrY=",\n-        version = "v0.0.0-20230905173453-70efb72857b0",\n+        remote = "https://github.com/stagnation/bb-remote-execution",\n+        vcs = "git",\n+        # Example for the documentation, check the code for the latest working commit\n+        commit = "2dfbdb8e3ac9675c70134bea97f4fb7b18c0de35",\n     )\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"$ bazel run \\\n    --script_path launch-bare \\\n    //bare\n"})}),"\n",(0,o.jsx)(n.p,{children:"and launch:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"$ mktemp -d\n/tmp/tmp.sjR6aHjhni\n$ sudo launch-bare /tmp/tmp.sjR6aHjhni\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["We need sudo privileges for creating the special character devices.\nOtherwise it fails when creating ",(0,o.jsx)(n.code,{children:"/dev/random"})," in the input root.\nWe will also need ",(0,o.jsx)(n.code,{children:"CAP_SYS_ADMIN"})," for ",(0,o.jsx)(n.code,{children:"mount"})]})}),"\n",(0,o.jsxs)(n.p,{children:["Notice that we no longer use FUSE,\nbut for our reproduction that is okay.\nIn production use you ",(0,o.jsx)(n.a,{href:"/docs/improved-chroot-in-buildbarn/chroot-in-buildbarn/",children:"do want FUSE"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"you-can-also-use-a-local-checkout-and-override-the-repository",children:"You can also use a local checkout and override the repository"}),"\n",(0,o.jsxs)(n.p,{children:["If you want to change the patches it is often easiest to use Bazel's\n",(0,o.jsx)(n.code,{children:"--override_repository"})," flag.\nJust rebuild it with this command line\nand the ",(0,o.jsx)(n.code,{children:"go_module"})," does not matter."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"$ bazel run \\\n    --script_path launch-bare \\\n    --override_repository com_github_buildbarn_bb_remote_execution=~/task/patching/bb-remote-execution \\\n    //bare\n"})}),"\n",(0,o.jsx)(n.h2,{id:"run-the-reproduction-with-the-bare-deployment",children:"Run the reproduction with the bare deployment"}),"\n",(0,o.jsx)(n.p,{children:"We now build with the simpler bazel command:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'$ bazel build \\\n  --remote_executor=grpc://localhost:8980 \\\n  --remote_instance_name="" \\\n  //:introspection\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Notice that we no longer use FUSE,\nbut for our reproduction that is okay.\nIn production use you ",(0,o.jsx)(n.a,{href:"/docs/improved-chroot-in-buildbarn/chroot-in-buildbarn/",children:"do want FUSE"})]}),"\n",(0,o.jsx)(n.h3,{id:"successful-build",children:"Successful build"}),"\n",(0,o.jsx)(n.p,{children:"This is the expected output:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"INFO: From RunBinary out:\narch_status\nattr\nautogroup\nauxv\ncgroup\nclear_refs\ncmdline\ncomm\ncoredump_filter\ncpu_resctrl_groups\ncpuset\nTarget //:introspection up-to-date:\n  bazel-bin/out\nINFO: Elapsed time: 0.306s, Critical Path: 0.03s\nINFO: 2 processes: 1 internal, 1 remote.\nINFO: Build completed successfully, 2 total actions\n"})}),"\n",(0,o.jsxs)(n.p,{children:["If it is not executed remotely run ",(0,o.jsx)(n.code,{children:"bazel clean"}),".\nUnfortunately the ",(0,o.jsx)(n.code,{children:"no-cache"})," tag does not work here."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var t=r(6540);const o={},i=t.createContext(o);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);