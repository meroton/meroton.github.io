"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6534],{1213:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"type":"mdx","permalink":"/master-thesis/","source":"@site/src/pages/master-thesis/index.md","title":"Master Thesis Projects","description":"Meroton offers opportunities for master theses work. As a master thesis","frontMatter":{},"unlisted":false}');var s=i(4848),r=i(8453);const o={},l="Master Thesis Projects",a={},c=[{value:"Contact Person",id:"contact-person",level:2},{value:"Predictive Scaling of Dynamic Cloud Workloads",id:"predictive-scaling-of-dynamic-cloud-workloads",level:2},{value:"Background",id:"background",level:3},{value:"Task",id:"task",level:3},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Reduce Build Times by Trimming Input File Trees",id:"reduce-build-times-by-trimming-input-file-trees",level:2},{value:"Background",id:"background-1",level:3},{value:"Task",id:"task-1",level:3},{value:"Prerequisites",id:"prerequisites-1",level:3}];function d(e){const n={a:"a",br:"br",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"master-thesis-projects",children:"Master Thesis Projects"})}),"\n",(0,s.jsx)(n.p,{children:"Meroton offers opportunities for master theses work. As a master thesis\nstudent, you will sit together with our team in our Link\xf6ping office and\nget daily direct support from a mentor on your task."}),"\n",(0,s.jsx)(n.p,{children:"This page lists thesis subjects that we have identified as interesting\nand suitable. Alternatively, you are welcome to propose your own\nsubject."}),"\n",(0,s.jsx)(n.h2,{id:"contact-person",children:"Contact Person"}),"\n",(0,s.jsxs)(n.p,{children:["Fredrik Medley <",(0,s.jsx)(n.a,{href:"mailto:fredrik@meroton.com",children:"fredrik@meroton.com"}),">",(0,s.jsx)(n.br,{}),"\n","Telephone: +46730739188."]}),"\n",(0,s.jsx)(n.h2,{id:"predictive-scaling-of-dynamic-cloud-workloads",children:"Predictive Scaling of Dynamic Cloud Workloads"}),"\n",(0,s.jsx)(n.h3,{id:"background",children:"Background"}),"\n",(0,s.jsx)(n.p,{children:"The IT industry typically scales workloads using discrete, ad-hoc logic\nbased on resource utilization. While effective for simple cases, these\nmethods are often suboptimal for highly dynamic workloads, like those in\nlarge build clusters."}),"\n",(0,s.jsx)(n.p,{children:"Highly dynamic workloads often exhibit a predictable underlying signal\nthat simple heuristic methods fail to exploit. This thesis project aims\nto apply modern control theory to leverage these signals for efficiency\ngains."}),"\n",(0,s.jsx)(n.h3,{id:"task",children:"Task"}),"\n",(0,s.jsx)(n.p,{children:"The thesis will investigate and quantify the potential savings from an\noptimized scaling algorithm. The core task is to develop and evaluate\nseveral general models such as: PID controllers, model predictive\ncontrol (MPC), and reinforcement learning (RL) approaches."}),"\n",(0,s.jsx)(n.p,{children:"The models will be evaluated with real world data. A key part of the\nanalysis will be comparing the trade-offs between critical performance\nindicators like queue sizes, resource overallocation, as well as the\noperational effort required from cluster maintainers to keep the system\ntuned."}),"\n",(0,s.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Student in a Master's program for Computer Science, Control\nEngineering, Electrical Engineering, or a related discipline."}),"\n",(0,s.jsx)(n.li,{children:"Strong foundation in control theory (PID, MPC) and/or machine\nlearning."}),"\n",(0,s.jsx)(n.li,{children:"An analytical mindset with the ability to apply theoretical concepts\nto real-world problems."}),"\n",(0,s.jsx)(n.li,{children:"Preferred: Golang and Kubernetes knowledge"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"reduce-build-times-by-trimming-input-file-trees",children:"Reduce Build Times by Trimming Input File Trees"}),"\n",(0,s.jsx)(n.h3,{id:"background-1",children:"Background"}),"\n",(0,s.jsxs)(n.p,{children:["Large scale development projects often suffer slow continuous testing\nexperience. A build tool like ",(0,s.jsx)(n.a,{href:"https://www.gnu.org/software/make/",children:"Make"})," runs\nlots of actions, e.g. compiling a file, linking a binary or executing a test.\nEach action can be described by its input file tree and command line. If either\nthe file tree or the command line changes, the action has to be rerun."]}),"\n",(0,s.jsx)(n.p,{children:"The input file tree has a tendency to be overspecified, for example using a\nwhole Python package when only a few files are imported. This leads to rerunning\nactions when the modified files are not used."}),"\n",(0,s.jsx)(n.h3,{id:"task-1",children:"Task"}),"\n",(0,s.jsx)(n.p,{children:"This thesis project will investigate the potential savings from optimising the\ninput file trees to the build steps, based on the used files, reported by a\nvirtual file system (FUSE), instead of the usually overspecified input file\nlists. For evaluation, a couple of open source projects will be selected and\nevaluated. The task will include Go programming for extracting data and then\nanalysis using languages of your choice."}),"\n",(0,s.jsx)(n.h3,{id:"prerequisites-1",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Required: Linux programming skills."}),"\n",(0,s.jsx)(n.li,{children:"Preferred: Golang knowledge."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var t=i(6540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);