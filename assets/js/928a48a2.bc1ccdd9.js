"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5418],{9451:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>a});var o=r(4848),t=r(8453);const i={title:"I Chroot in Buildbarn",sidebar_position:1},s="Chroot in Buildbarn",d={id:"improved-chroot-in-buildbarn/chroot-in-buildbarn",title:"I Chroot in Buildbarn",description:"Buildbarn workers and runners have functionality to chroot into the input root,",source:"@site/docs/improved-chroot-in-buildbarn/chroot-in-buildbarn.md",sourceDirName:"improved-chroot-in-buildbarn",slug:"/improved-chroot-in-buildbarn/chroot-in-buildbarn",permalink:"/docs/improved-chroot-in-buildbarn/chroot-in-buildbarn",draft:!1,unlisted:!1,editUrl:"https://github.com/meroton/docs/edit/main/docs/improved-chroot-in-buildbarn/chroot-in-buildbarn.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"I Chroot in Buildbarn",sidebar_position:1},sidebar:"sidebar",previous:{title:"Improved chroot in Buildbarn",permalink:"/docs/improved-chroot-in-buildbarn/"},next:{title:"II The Problem with Special Mounts",permalink:"/docs/improved-chroot-in-buildbarn/the-problem-with-special-filesystems"}},c={},a=[{value:"Configuration",id:"configuration",level:2},{value:"Fuse workers",id:"fuse-workers",level:3}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"chroot-in-buildbarn",children:"Chroot in Buildbarn"})}),"\n",(0,o.jsxs)(n.p,{children:["Buildbarn workers and runners have functionality to chroot into the input root,\nthis is valuable if the ",(0,o.jsx)(n.a,{href:"https://github.com/bazelbuild/remote-apis",children:"REAPI"})," ",(0,o.jsx)(n.em,{children:"action"}),"  ",(0,o.jsx)(n.em,{children:"input root"})," contains all the required tools,\nthe action will then be completely isolated from the host machine."]}),"\n",(0,o.jsxs)(n.p,{children:["Buildbarn's remote build engine, RBE, is split in two programs,\nthe ",(0,o.jsx)(n.em,{children:"worker"})," and the ",(0,o.jsx)(n.em,{children:"runner"}),".\nThe ",(0,o.jsx)(n.em,{children:"worker"})," is responsible for communicating with the ",(0,o.jsx)(n.em,{children:"scheduler"}),"\nand by extension the build client (",(0,o.jsx)(n.code,{children:"bazel"}),", ",(0,o.jsx)(n.code,{children:"buck2"}),", ...).\nIt accepts an ",(0,o.jsx)(n.em,{children:"action"})," to perform,\ndownloads the necessary files (if they are not already cached locally),\nprepares the action in its own sandbox directory\nand tells the ",(0,o.jsx)(n.em,{children:"runner"})," to execute it.\nThis allows for more process isolation and better security controls.\nThe ",(0,o.jsx)(n.em,{children:"runner"})," is simple and executes ",(0,o.jsx)(n.em,{children:"commands"})," on input files fed by the ",(0,o.jsx)(n.em,{children:"worker"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["To enable ",(0,o.jsx)(n.code,{children:"chroot"})," you just need a couple of settings,\nfirst enable ",(0,o.jsx)(n.code,{children:"chroot"}),",\nthen ",(0,o.jsx)(n.a,{href:"https://github.com/buildbarn/bb-remote-execution/blob/96c4fdce659fabfaba7ee2a60fd4e2ffab8352e2/pkg/builder/local_build_executor.go#L185",children:"create the special character devices"})," in the action root.\nThe well-known family of ",(0,o.jsx)(n.code,{children:"/dev/null"}),", ",(0,o.jsx)(n.code,{children:"/dev/random"}),", and so on.\nThey are not technically ",(0,o.jsx)(n.em,{children:"mounted"}),", but created through ",(0,o.jsx)(n.code,{children:"mknodat"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Runner.jsonnet ",(0,o.jsx)(n.a,{href:"https://github.com/buildbarn/bb-remote-execution/blob/96c4fdce659fabfaba7ee2a60fd4e2ffab8352e2/pkg/proto/configuration/bb_runner/bb_runner.proto#L39",children:"runner proto documentation"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"{\n  chrootIntoInputRoot: true,\n  ...\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Worker.jsonnet ",(0,o.jsx)(n.a,{href:"https://github.com/buildbarn/bb-remote-execution/blob/96c4fdce659fabfaba7ee2a60fd4e2ffab8352e2/pkg/proto/configuration/bb_worker/bb_worker.proto#L258",children:"worker proto documentation"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'{\n  ...\n  buildDirectories: [\n    {\n      runners: [\n        {\n        ...\n          inputRootCharacterDeviceNodes: [\n            "full",\n            "null",\n            "random",\n            "tty",\n            "urandom",\n            "zero"\n          ],\n        }\n      ] // runners\n    }\n  ] // build directories\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"fuse-workers",children:"Fuse workers"}),"\n",(0,o.jsxs)(n.p,{children:["If your action roots have many files,\nyou do not want to use the hardlinking workers.\nEspecially if many of the tool files are never read,\nit is better to use ",(0,o.jsx)(n.code,{children:"fuse"})," workers.\nThere the input root is prepared in a ",(0,o.jsx)(n.code,{children:"fuse"})," or ",(0,o.jsx)(n.code,{children:"NFSv4"})," filesystem\nand downloaded lazily."]}),"\n",(0,o.jsxs)(n.p,{children:["Fuse setup is trickier, thankfully we have ",(0,o.jsx)(n.a,{href:"https://github.com/buildbarn/bb-deployments/blob/d142377ce90d48407f01ca67a7707d958de38936/docker-compose/docker-compose.yml#L68",children:"already demonstrated it in bb-deployments"}),".\nIt is important to set up the ",(0,o.jsx)(n.code,{children:"docker"})," ",(0,o.jsx)(n.code,{children:"bind"})," mounts correctly,\nso the ",(0,o.jsx)(n.em,{children:"worker"})," and ",(0,o.jsx)(n.em,{children:"runner"})," can communicate.\nWithout this, the ",(0,o.jsx)(n.em,{children:"worker"})," fails to setup the input root\nand fallback code in the ",(0,o.jsx)(n.code,{children:"fuse"})," layers tries to launch programs that do not exist."]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.em,{children:"worker"})," needs privileges for setting up the ",(0,o.jsx)(n.code,{children:"fuse"})," filesystem and preparing the ",(0,o.jsx)(n.code,{children:"chroot"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"services:\n  worker-fuse:\n  ...\n    privileged: true\n    volumes:\n      - ../.mounts/apps/worker-fuse:/app:ro\n      - type: bind\n        source: ../.mounts/data/worker-fuse\n        target: /worker\n        bind:\n          # Bidirectional mount to expose the FUSE mount.\n          propagation: shared\n\n  runner-fuse:\n    ...\n    privileged: false\n    volumes:\n      - ../.mounts/apps/runner:/app:ro\n      - type: bind\n        source: ../.mounts/data/worker-fuse\n        target: /worker\n        bind:\n          # HostToContainer mount to use the FUSE mount.\n          propagation: slave\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>d});var o=r(6540);const t={},i=o.createContext(t);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);