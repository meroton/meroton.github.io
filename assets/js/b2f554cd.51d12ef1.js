"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"bb-deployments-updates-2023-02","metadata":{"permalink":"/blog/bb-deployments-updates-2023-02","editUrl":"https://github.com/meroton/docs/edit/main/blog/2023-02-21-updates-to-bb-deployments.mdx","source":"@site/blog/2023-02-21-updates-to-bb-deployments.mdx","title":"Updates to Buildbarn deployment repo as of Febuary 2023","description":"The example configuration project for buildbarn","date":"2023-02-21T00:00:00.000Z","formattedDate":"February 21, 2023","tags":[{"label":"release","permalink":"/blog/tags/release"},{"label":"buildbarn","permalink":"/blog/tags/buildbarn"}],"readingTime":3.375,"hasTruncateMarker":false,"authors":[{"name":"Benjamin Ingberg","imageURL":"/img/benjamin-avatar.png","key":"benjamin"}],"frontMatter":{"slug":"bb-deployments-updates-2023-02","title":"Updates to Buildbarn deployment repo as of Febuary 2023","authors":"benjamin","tags":["release","buildbarn"]},"nextItem":{"title":"Bazel 6 Errors when using Build without the Bytes","permalink":"/blog/bazel-6-errors-build-without-the-bytes"}},"content":"The example configuration project for buildbarn\\n[bb-deployments](https://github.com/buildbarn/bb-deployments)\\nhas gotten updates.\\n\\nThis is a continuation of the\\n[updates from last year article](/blog/bb-deploy-updates-2022-04)\\nand is a high level summary of what has happened since April 2022 up to 2023-02-16.\\n\\n## Let ReferenceExpandingBlobAccess support GCS\\n\\nReferenceExpandingBlobAccess already supports S3 so support was extended to Google Cloud Storage buckets.\\n\\n## Support for prefetching Virtual Filesystems\\n\\nRunning workers with Fuse allows inputs for an action\\nto be downloaded on demand.\\nThis significantly reduces the amount of data\\nthat gets sent in order to run overspecified actions.\\nThis however leads to poor performance for actions\\nwhich reads a lot of their inputs synchronously.\\n\\nWith the prefetcher most of these actions can be recognized\\nand data which is likely to be needed\\ncan be downloaded ahead of time.\\n\\n## Support for sha256tree\\n\\nBuildbarn has added support for\\n[sha256tree](https://github.com/bazelbuild/remote-apis/pull/235)\\nwhich uses sha256 hashing over a tree structure similar to blake3.\\n\\nThis algorithm will allow large CAS objects to be chunked and decompositioned\\nwith guaranteed data integrity while still using sha256 hardware instructions.\\n\\n## Completeness checking now streams REv2 Tree objects\\n\\nThis change introduces a small change to the configuration schema. If you previous had this:\\n```\\nbackend: { completenessChecking: ... },\\n```\\nYou will now need to write something along these lines:\\n```\\nbackend: {\\n    completenessChecking: {\\n        backend: ...,\\n        maximumTotalTreeSizeBytes: 64 * 1024 * 1024,\\n    },\\n},\\n```\\n\\nSee also the\\n[bb-storage commit 1b84fa8](https://github.com/buildbarn/bb-storage/commit/1b84fa824dc60e77776ce50e05c549fdf20c089b).\\n\\n## Postponed healthy service status\\n\\nThe healthy and serving status,\\ni.e. HTTP `/-/healthy` and\\n[grpc_health_v1.HealthCheckResponse_SERVING](https://pkg.go.dev/google.golang.org/grpc/health/grpc_health_v1#HealthCheckResponse_ServingStatus),\\nare now postponed until the whole service is up and running.\\nBefore, the healthy status was potentially reported before starting to listen to the gRPC ports.\\nKubernetes will now wait until the service is up before forwarding connections to it.\\n\\n## Server keepalive parameter options\\n\\nThe option `buildbarn.configuration.grpc.ServerConfiguration.keepalive_parameters` can be used for L4 load balancing,\\nto control when to ask clients to reconnect.\\nFor default values, see\\n[keepalive.ServerParameters](https://pkg.go.dev/google.golang.org/grpc@v1.49.0/keepalive#ServerParameters).\\n\\n## Graceful termination of `LocalBlobAccess`\\n\\nWhen `SIGTERM` or `SIGINT` is received, the `LocalBlobAccess` now synchronize data to disk before shutting down.\\nDeployments using persistent storage will no longer observe loss of data when restarting the `bb_storage` services.\\n\\n## Non-sector Aligned Writes to Block Device\\n\\nUsing sector aligned storage is wasteful for the action cache where the messages are typically very small.\\nBuildbarn can now fill all the gaps when writing, making storage more efficient.\\n\\n## DAG Shaped BlobAccess Configuration\\n\\nInstead of a tree shaped BlobAccess configuration, the `with_labels` notation allows a directed acyclic graph.\\nSee also the\\n[bb-storage commit cc295ad](https://github.com/buildbarn/bb-storage/commit/cc295adc0f05cd579d48a65325ce54b54331c6a6).\\n\\n## NFSv4 as worker filesystem\\n\\nThe `bb_worker` can now supply the working directory for `bb_runner` using NFSv4.\\nPreviously, FUSE and hard linking files from the worker cache were the only two options.\\nThis addition was mainly done to overcome the poor FUSE support on macOS.\\n\\nThe NFSv4 server in `bb_worker` only supports macOS at the moment.\\nNo effort has been spent to write custom mount logic for other systems yet.\\n\\n## Specify `forwardMetadata` with a JMESPath\\n\\nMetadata forwarding is now more flexible, the JMESPath expressions can for example add authorization result data.\\nThe format is described in\\n[grpc.proto](https://github.com/buildbarn/bb-storage/blob/0c2fcad5872b0fef47bb5bee8aba9518dc2fe465/pkg/proto/configuration/grpc/grpc.proto#L55-L93).\\n\\nA common use case is to replace\\n```jsonnet\\n{\\n    forwardMetadata: [\\"build.bazel.remote.execution.v2.requestmetadata-bin\\"],\\n}\\n```\\nwith\\n```jsonnet\\n{\\n    addMetadataJmespathExpression: \'{\\n        \\"build.bazel.remote.execution.v2.requestmetadata-bin\\":\\n            incomingGRPCMetadata.\\"build.bazel.remote.execution.v2.requestmetadata-bin\\"\\n    }\',\\n}\\n```\\n\\n## Tracing: Deprecate the Jaeger collector span exporter\\n\\nThis option is deprecated, as Jaeger 1.35 and later provide native support for the OpenTelemetry protocol.\\n\\n## `bb-deployments` Ubuntu 22.04 Example Runner Image\\n\\nThe [rbe_autoconfig](https://github.com/bazelbuild/bazel-toolchains/blob/4.0.0/rules/rbe_repo.bzl#L896)\\nin [bazel-toolchains](https://github.com/bazelbuild/bazel-toolchains)\\nhas been deprecated. In bb-deployments it has been replaced by the\\n[Act](https://github.com/nektos/act/blob/master/IMAGES.md) image\\n[ghcr.io/catthehacker/ubuntu:act-22.04](https://github.com/catthehacker/docker_images),\\ndistributed by [catthehacker](https://github.com/catthehacker/docker_images),\\nused for running GitHub Actions locally under Ubuntu 22.04.\\n\\n## `bb-deployments` Integration Tests\\n\\nThe [bare deployment](https://github.com/buildbarn/bb-deployments/tree/ce123473f27290648d1e56f7072468eb6b67fefb/bare) and\\n[Docker Compose deployment](https://github.com/buildbarn/bb-deployments/tree/ce123473f27290648d1e56f7072468eb6b67fefb/docker-compose)\\nhave now got [tests scripts](https://github.com/buildbarn/bb-deployments/tree/ce123473f27290648d1e56f7072468eb6b67fefb/tools)\\nthat builds and tests `@abseil-hello//:hello_test` remotely, shuts down and then checks for 100% cache hit after restart.\\nAnother CI test is checking for minimal differences between the Docker Compose deployment and\\nthe [Kubernetes deployment](https://github.com/buildbarn/bb-deployments/tree/ce123473f27290648d1e56f7072468eb6b67fefb/kubernetes).\\n\\nIf there are any other changes you feel deserve a mention\\nfeel free to submit a pull request at github using the link below."},{"id":"bazel-6-errors-build-without-the-bytes","metadata":{"permalink":"/blog/bazel-6-errors-build-without-the-bytes","editUrl":"https://github.com/meroton/docs/edit/main/blog/2023-02-07-bazel-errors-when-using-bazel-6.mdx","source":"@site/blog/2023-02-07-bazel-errors-when-using-bazel-6.mdx","title":"Bazel 6 Errors when using Build without the Bytes","description":"Starting from v6.0.0, Bazel crashes when building without the bytes.","date":"2023-02-07T00:00:00.000Z","formattedDate":"February 7, 2023","tags":[{"label":"bazel","permalink":"/blog/tags/bazel"},{"label":"bugs","permalink":"/blog/tags/bugs"}],"readingTime":3.13,"hasTruncateMarker":false,"authors":[{"name":"Benjamin Ingberg","imageURL":"/img/benjamin-avatar.png","key":"benjamin"}],"frontMatter":{"slug":"bazel-6-errors-build-without-the-bytes","title":"Bazel 6 Errors when using Build without the Bytes","authors":"benjamin","tags":["bazel","bugs"]},"prevItem":{"title":"Updates to Buildbarn deployment repo as of Febuary 2023","permalink":"/blog/bb-deployments-updates-2023-02"},"nextItem":{"title":"BuildBar at the Meroton Office","permalink":"/blog/buildbar-at-meroton-office"}},"content":"Starting from v6.0.0, Bazel crashes when building without the bytes.\\nBecause it sets `--experimental_action_cache_store_output_metadata`\\nwhen using `--remote_download_minimal` or `--remote_download_toplevel`.\\n\\nEffectively this leads to Bazel getting stuck in a build failure loop\\nwhen your remote cache evicts an item you need from the cache.\\n\\n```console\\ndeveloper@machine:~$ bazel test @abseil-hello//:hello_test --remote_download_\\nminimal\\n\\n[0 / 6] [Prepa] BazelWorkspaceStatusAction stable-status.txt\\nERROR: /home/developer/.cache/bazel/_bazel_developer/139b99b96c4ab6cba5122193\\n1a36e346/external/abseil-hello/BUILD.bazel:26:8: Linking external/abseil-hell\\no/hello_test failed: (Exit 34): 42 errors during bulk transfer:\\njava.io.FileNotFoundException: /home/developer/.cache/bazel/_bazel_developer/\\n139b99b96c4ab6cba51221931a36e346/execroot/cache_test/bazel-out/k8-fastbuild/b\\nin/external/com_google_absl/absl/base/_objs/base/spinlock.pic.o (No such file\\n or directory)\\n...\\nTarget @abseil-hello//:hello_test failed to build\\nUse --verbose_failures to see the command lines of failed build steps.\\nINFO: Elapsed time: 3.820s, Critical Path: 0.88s\\nINFO: 5 processes: 4 internal, 1 remote.\\nFAILED: Build did NOT complete successfully\\n@abseil-hello//:hello_test                                   FAILED TO BUILD\\n```\\n\\nThe key here is **(Exit 34): xx errors during bulk transfer**.\\n34 is Bazel\'s error code for Remote Error.\\n\\nThe recommended solution is to set the flag explicitly to false,\\nwith `--experimental_action_cache_store_output_metadata=false`.\\nTo quickly solve the issue on your local machine you can run `bazel clean`.\\nHowever, this will just push the error into the future.\\n\\nThe bug is independent of which remote cache system you use\\nand is tracked at [GitHub](https://github.com/bazelbuild/bazel/issues/17366).\\n\\n## Background\\n\\nWhen performing an analysis of what to build\\nBazel will ask the remote cache which items have already been built.\\nBazel will only schedule build actions for items\\nthat do not already exist in the cache.\\nIf running a build without the bytes[^1]\\nthe intermediary results will not be downloaded to the client.\\n\\nShould the cached items be evicted\\nthen Bazel will run into an unrecoverable error.\\nIt wants the remote system to perform an action using inputs from the cache,\\nbut they have disappeared.\\nAnd Bazel can not upload them,\\nas they were never downloaded to the client.\\nThe build would then dutifully crash\\n(some work has been put into trying to\\n[resolve this on the bazel side](https://groups.google.com/g/bazel-dev/c/WwNN4kiYSpc)\\nbut it has not been considered a priority).\\n\\nThis puts an implicit requirement on the remote cache implementation.\\nArtifacts need to be saved for as long as Bazel needs them.\\nThe problem here is that this is an undefined period of time.\\nBazel will not proactively check if the item still exists,\\nnor in any other manner inform the cache that\\nit will need the item in the future.\\n\\n## Before v6.0.0\\n\\nBazel tied the lifetime of which items already exists in the cache\\n(the existence cache)\\nto the analysis cache.\\nWhenever the analysis cache was purged it would also drop the existence cache.\\n\\nThe analysis cache is purged quite frequently.\\nIt would therefore be rare in practice,\\nthat the existence cache would be out of date.\\nFurthermore, since the existence cache was an in-memory cache,\\nBazel crashing would forcefully evict the existence cache.\\nThereby fixing the issue.\\n\\n## After v6.0.0\\n\\nWith the\\n`--experimental_action_cache_store_output_metadata` flag enabled by default\\nthe existence cache is instead committed to disk and\\nnever dropped during normal operation.\\n\\nThis means two things:\\n\\n1. The implied requirement on the remote cache is effectively infinite. \\n2. Should this requirement not be met the build will fail.\\nAnd since the existence cache is committed to disk Bazel will just\\nfail again the next time you run it.\\n\\nCurrently the only user-facing way of purging the existence cache\\nis to run `bazel clean`.\\nWhich is generally considered an anti-pattern.\\n\\nIf you are using the [bb-clientd](https://github.com/buildbarn/bb-clientd#-to-perform-remote-builds-without-the-bytes) `--remote_output_service`\\nto run builds without the bytes\\n(an alternative strategy to `--remote_download_minimal`)\\nthis will not affect you.\\n\\n[^1]: When using Bazel with remote execution\\nremote builds are run in a remote server cluster.\\nThere is therefore no need for each developer\\nto download the partial results of build.\\nBazel calls this feature\\n[Remote Builds Without the Bytes](https://blog.bazel.build/2019/05/07/builds-without-bytes.html).\\nThe progress of the feature can be tracked at\\n[GitHub](https://github.com/bazelbuild/bazel/issues/6862)."},{"id":"buildbar-at-meroton-office","metadata":{"permalink":"/blog/buildbar-at-meroton-office","editUrl":"https://github.com/meroton/docs/edit/main/blog/2022-11-24-build-bar-at-meroton-office.mdx","source":"@site/blog/2022-11-24-build-bar-at-meroton-office.mdx","title":"BuildBar at the Meroton Office","description":"After BazelCon we\'ve all gotten a bit giddy and you might feel excited how the information presented at BazelCon might impact your development workflow.","date":"2022-11-24T00:00:00.000Z","formattedDate":"November 24, 2022","tags":[{"label":"meroton","permalink":"/blog/tags/meroton"},{"label":"afterwork","permalink":"/blog/tags/afterwork"}],"readingTime":0.57,"hasTruncateMarker":false,"authors":[{"name":"Benjamin Ingberg","imageURL":"/img/benjamin-avatar.png","key":"benjamin"}],"frontMatter":{"slug":"buildbar-at-meroton-office","title":"BuildBar at the Meroton Office","authors":"benjamin","tags":["meroton","afterwork"]},"prevItem":{"title":"Bazel 6 Errors when using Build without the Bytes","permalink":"/blog/bazel-6-errors-build-without-the-bytes"},"nextItem":{"title":"Remote Executors for the Free Environment","permalink":"/blog/remote-executors-for-free-tier"}},"content":"After BazelCon we\'ve all gotten a bit giddy and you might feel excited how the information presented at BazelCon might impact your development workflow.\\nFor that purpose we\'re inviting everyone in the wider bazel community to an open BuildBar at the Meroton offices.\\n\\nCome over and digest BazelCon with high level technical discussions of the talks,\\ngreat company, a pleasant atmosphere and also beer.\\n\\nFeel welcome to come over this Thursday the first of December from 16 to 20.\\n\\n## Directions\\n\\nYou\'ll find us at our Link\xf6ping offices at Fridtunagatan 33. Currently there is some construction but follow the red lines and you\'ll be fine.\\n\\n<figure>\\n  <img alt=\\"\\" src=\\"/img/office_map.webp\\" />\\n  <figcaption>Fridtunagatan 33 Link\xf6ping</figcaption>\\n</figure>"},{"id":"remote-executors-for-free-tier","metadata":{"permalink":"/blog/remote-executors-for-free-tier","editUrl":"https://github.com/meroton/docs/edit/main/blog/2022-10-13-remote-executors-for-free-tier.mdx","source":"@site/blog/2022-10-13-remote-executors-for-free-tier.mdx","title":"Remote Executors for the Free Environment","description":"We\'ve performed some updates to the free tier and our pricing model.","date":"2022-10-13T00:00:00.000Z","formattedDate":"October 13, 2022","tags":[{"label":"meroton","permalink":"/blog/tags/meroton"},{"label":"remote execution","permalink":"/blog/tags/remote-execution"},{"label":"cloud","permalink":"/blog/tags/cloud"},{"label":"free tier","permalink":"/blog/tags/free-tier"},{"label":"starter tier","permalink":"/blog/tags/starter-tier"}],"readingTime":1.575,"hasTruncateMarker":false,"authors":[{"name":"Benjamin Ingberg","imageURL":"/img/benjamin-avatar.png","key":"benjamin"}],"frontMatter":{"slug":"remote-executors-for-free-tier","title":"Remote Executors for the Free Environment","authors":"benjamin","tags":["meroton","remote execution","cloud","free tier","starter tier"]},"prevItem":{"title":"BuildBar at the Meroton Office","permalink":"/blog/buildbar-at-meroton-office"},"nextItem":{"title":"Tips, Tricks & Non-Deterministic Builds","permalink":"/blog/tips-trix-and-nondeterminism"}},"content":"We\'ve performed some updates to the free tier and our pricing model.\\n\\n## Shared Cache\\n\\nThe free tier has been upgraded into an environment with a 1TB cache.\\nThis means that you can use the free tier without worrying about hitting any limits or setup process.\\n\\nDo note that while the cached items will only be accessible with the correct api keys,\\nthe storage area can be reclaimed by anyone.\\nI.e. as the cache becomes full your items might be dropped.\\n\\nWith the current churn we expect any items in the cache last at least a week.\\nHowever, you should always treat items in the cache as something which might be dropped at any moment.\\nThe purpose and design of the cache is to maximize build performance, not to provide storage.\\n\\n## Shared executors\\n\\nNew for the free environment is the introduction of remote execution,\\nthis was previously only available for paying customers.\\n\\nIf you\'re using bazel you can simply add the `--remote_executor=<...>` flag and your builds will be done remotely.\\n\\nThe free environment has access to 64 shared executors.\\n\\n## Starter tier\\n\\nIf you need dedicated storage for evaluation purposes we also offer a starter tier.\\nThe starter tier is a streamlined environment with 100 GB of dedicated cache and access to the same 64 executors as the free tier.\\n\\nThis allows you to try out remote execution and caching without being disturbed by others.\\nWhile the 100GB dedicated cache will only be used by you and therefore not be overwritten by anyone else\'s build,\\nthe cache is still a cache and the system will still drop the cache entries if it determines it is useful for maximizing performance.\\n\\n## Need more executors?\\n\\nAt the moment the starter tier has a fixed amount of shared executors.\\nIf you need a scalable solution contact us for setting up a custom Buildbarn environment of any size."},{"id":"tips-trix-and-nondeterminism","metadata":{"permalink":"/blog/tips-trix-and-nondeterminism","editUrl":"https://github.com/meroton/docs/edit/main/blog/2022-08-28-tips-trix-and-non-deterministic-builds.mdx","source":"@site/blog/2022-08-28-tips-trix-and-non-deterministic-builds.mdx","title":"Tips, Tricks & Non-Deterministic Builds","description":"When you have a remote build and cache cluster it can sometimes be hard to track down what exactly is using all of your building resources. To help with this we have started a tips and trix section in the documentation where we will share methods we use to debug and resolve slow builds.","date":"2022-08-28T00:00:00.000Z","formattedDate":"August 28, 2022","tags":[{"label":"meroton","permalink":"/blog/tags/meroton"},{"label":"bazel","permalink":"/blog/tags/bazel"},{"label":"optimizing","permalink":"/blog/tags/optimizing"}],"readingTime":1.21,"hasTruncateMarker":false,"authors":[{"name":"Benjamin Ingberg","imageURL":"/img/benjamin-avatar.png","key":"benjamin"}],"frontMatter":{"slug":"tips-trix-and-nondeterminism","title":"Tips, Tricks & Non-Deterministic Builds","authors":"benjamin","tags":["meroton","bazel","optimizing"]},"prevItem":{"title":"Remote Executors for the Free Environment","permalink":"/blog/remote-executors-for-free-tier"},"nextItem":{"title":"Updates to Buildbarn deployment repo as of April 2022","permalink":"/blog/bb-deploy-updates-2022-04"}},"content":"When you have a remote build and cache cluster it can sometimes be hard to track down what exactly is using all of your building resources. To help with this we have started a tips and trix section in the documentation where we will share methods we use to debug and resolve slow builds.\\n\\nThe first section is about build non-determinism. Ideally your build actions should produce the same output when run with the same input, in practice this is sometimes not the case. If you are lucky a non-deterministic action won\'t be noticed since the inputs for the non-deterministic action is unchanged it won\'t be rebuilt.\\n\\nIf you\'re not so lucky the non-determinism stems from a bug in the implementation and you should definitiely pay attention to them. But how do you know which if any actions are non-deterministic?\\n\\nThis is not trivial but we have added [a server side feature](/docs/tips/non-deterministic-builds) which allows detection of non-determinism with virtually no effort on your part.\\n\\nOnce activated it reruns a configured fraction of your actions and automatically flags them if they produce different outputs. The scheduling is done outside of your bazel invocation so your build throughput will be unaffected at the cost of an increase in the number of resources consumed. We suggest 1% which will only increase your resource use by a trivial amount but you could of course set it to 100% which would double the cost of your builds."},{"id":"bb-deploy-updates-2022-04","metadata":{"permalink":"/blog/bb-deploy-updates-2022-04","editUrl":"https://github.com/meroton/docs/edit/main/blog/2022-05-04-updates-to-bb-deploy.mdx","source":"@site/blog/2022-05-04-updates-to-bb-deploy.mdx","title":"Updates to Buildbarn deployment repo as of April 2022","description":"The sample configuration project for Buildbarn was recently updated after a long hiatus. As an aid for people to understand which changes have been done see the following high level summary.","date":"2022-05-04T00:00:00.000Z","formattedDate":"May 4, 2022","tags":[{"label":"release","permalink":"/blog/tags/release"},{"label":"buildbarn","permalink":"/blog/tags/buildbarn"}],"readingTime":1.63,"hasTruncateMarker":false,"authors":[{"name":"Benjamin Ingberg","imageURL":"/img/benjamin-avatar.png","key":"benjamin"}],"frontMatter":{"slug":"bb-deploy-updates-2022-04","title":"Updates to Buildbarn deployment repo as of April 2022","authors":"benjamin","tags":["release","buildbarn"]},"prevItem":{"title":"Tips, Tricks & Non-Deterministic Builds","permalink":"/blog/tips-trix-and-nondeterminism"},"nextItem":{"title":"Purpose of the Articles","permalink":"/blog/about"}},"content":"The [sample configuration project for Buildbarn](https://github.com/buildbarn/bb-deployments) was recently updated after a long hiatus. As an aid for people to understand which changes have been done see the following high level summary.\\n\\n## April 2022 Updates\\n\\nThis includes updates to Buildbarn since December 2020.\\n\\n### Authorizer Overhaul\\n\\nAuthorizers have been rehauled to be more flexible it is now part of each individual cache and execution configuration.\\n\\nUsing a JWT authorization bearer token has been added as an authorization method.\\n\\n### Hierarchical Blob Access\\n\\nUsing hierarchical blob access allows blobs in instance name `foo/bar` to be accessed from instance `foo/bar/baz` but not instance `foo` or `foo/qux`.\\n\\n### Action Result Expiration\\n\\nAn expiry can be added to action result which lets the action cache purge the result of an exection that was performed too far in the past. This can be used to ensure that all targets are rebuilt periodically even if they are accessed frequently enough to not normally be purged from the cache.\\n\\n### Read Only Cache Replicas\\n\\nCache read traffic can now be sent to a read-only replica which is periodically probed for availability.\\n\\n### Concurrency Limiting Blob Replication\\n\\nLimit the number of concurrent replications to prevent network starvation\\n\\n### Run Commands as Another User\\n\\nAllows the commands to be run as a different user, on most platforms this means the bb-runner instance must run as root.\\n\\n### Size Class Analysis\\n\\nAllows executors of different size classes to be used, the scheduler will attempt to utilize executors efficiently but there is an inherent tradeof between throughput and latency. Once configured the scheduler will automatically attempt to keep track of which actions are best run on which executors.\\n\\n### Execution Routing Policy\\n\\nThe scheduler accepts an execution routing policy configuration that allows it to determine how to defer builds to different executors.\\n\\nIf you see any other changes you feel should get a mention feel free to submit a pull request at github using the link below."},{"id":"about","metadata":{"permalink":"/blog/about","editUrl":"https://github.com/meroton/docs/edit/main/blog/2022-02-22-about.mdx","source":"@site/blog/2022-02-22-about.mdx","title":"Purpose of the Articles","description":"The purpose of these articles is to have a freeform area discussing ideas, technical issues, solutions and news in an indepth relaxed manner. It is not to serve as reference material, structured reference material should be available in the documentation section.","date":"2022-02-22T00:00:00.000Z","formattedDate":"February 22, 2022","tags":[{"label":"meroton","permalink":"/blog/tags/meroton"}],"readingTime":0.505,"hasTruncateMarker":false,"authors":[{"name":"Benjamin Ingberg","imageURL":"/img/benjamin-avatar.png","key":"benjamin"}],"frontMatter":{"slug":"about","title":"Purpose of the Articles","authors":"benjamin","tags":["meroton"]},"prevItem":{"title":"Updates to Buildbarn deployment repo as of April 2022","permalink":"/blog/bb-deploy-updates-2022-04"}},"content":"The purpose of these articles is to have a freeform area discussing ideas, technical issues, solutions and news in an indepth relaxed manner. It is not to serve as reference material, structured reference material should be available in the documentation section.\\n\\nThe article format allows more in depth on discussions for reacurring subjects. In contrast to the documentation published articles aren\'t changed, if the subject requires a revisit in the future then we publish a new post and add references to the old.\\n\\nIf you see any errors feel free to submit a pull request at github using the link below."}]}')}}]);