<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://meroton.github.io/blog</id>
    <title>Meroton Blog</title>
    <updated>2022-10-13T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://meroton.github.io/blog"/>
    <subtitle>Meroton Blog</subtitle>
    <icon>https://meroton.github.io/img/favicon.svg</icon>
    <entry>
        <title type="html"><![CDATA[Remote Executors for the Free Environment]]></title>
        <id>remote-executors-for-free-tier</id>
        <link href="https://meroton.github.io/blog/remote-executors-for-free-tier"/>
        <updated>2022-10-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We've performed some updates to the free tier and our pricing model.]]></summary>
        <content type="html"><![CDATA[<p>We've performed some updates to the free tier and our pricing model.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="shared-cache">Shared Cache<a class="hash-link" href="#shared-cache" title="Direct link to heading">​</a></h2><p>The free tier has been upgraded into an environment with a 1TB cache and with unlimited 1 Gbps throughput.
This means that you can use the free tier without worrying about hitting any limits or setup process.</p><p>Do note that while the cached items will only be accessible with the correct api keys,
the storage area can be reclaimed by anyone.
I.e. as the cache becomes full your items might be dropped.</p><p>With the current churn we expect any items in the cache last at least a week.
However, you should always treat items in the cache as something which might be dropped at any moment.
The purpose and design of the cache is to maximize build performance, not to provide storage.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="shared-executors">Shared executors<a class="hash-link" href="#shared-executors" title="Direct link to heading">​</a></h2><p>New for the free environment is the introduction of remote execution,
this was previously only available for paying customers.</p><p>If you're using bazel you can simply add the <code>--remote_executor=&lt;...&gt;</code> flag and your builds will be done remotely.</p><p>The free environment has access to 64 shared executors.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="starter-tier">Starter tier<a class="hash-link" href="#starter-tier" title="Direct link to heading">​</a></h2><p>If you need dedicated storage for evaluation purposes we also offer a starter tier.
The starter tier is a streamlined environment with 100 GB of dedicated cache and access to the same 64 executors as the free tier.</p><p>This allows you to try out remote execution and caching without being disturbed by others.
While the 100GB dedicated cache will only be used by you and therefore not be overwritten by anyone else's build,
the cache is still a cache and the system will still drop the cache entries if it determines it is useful for maximizing performance.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="need-more-executors">Need more executors?<a class="hash-link" href="#need-more-executors" title="Direct link to heading">​</a></h2><p>At the moment the starter tier has a fixed amount of shared executors.
If you need a scalable solution contact us for setting up a custom Buildbarn environment of any size.</p>]]></content>
        <author>
            <name>Benjamin Ingberg</name>
        </author>
        <category label="meroton" term="meroton"/>
        <category label="remote execution" term="remote execution"/>
        <category label="cloud" term="cloud"/>
        <category label="free tier" term="free tier"/>
        <category label="starter tier" term="starter tier"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tips, Tricks & Non-Deterministic Builds]]></title>
        <id>tips-trix-and-nondeterminism</id>
        <link href="https://meroton.github.io/blog/tips-trix-and-nondeterminism"/>
        <updated>2022-08-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[When you have a remote build and cache cluster it can sometimes be hard to track down what exactly is using all of your building resources. To help with this we have started a tips and trix section in the documentation where we will share methods we use to debug and resolve slow builds.]]></summary>
        <content type="html"><![CDATA[<p>When you have a remote build and cache cluster it can sometimes be hard to track down what exactly is using all of your building resources. To help with this we have started a tips and trix section in the documentation where we will share methods we use to debug and resolve slow builds.</p><p>The first section is about build non-determinism. Ideally your build actions should produce the same output when run with the same input, in practice this is sometimes not the case. If you are lucky a non-deterministic action won't be noticed since the inputs for the non-deterministic action is unchanged it won't be rebuilt.</p><p>If you're not so lucky the non-determinism stems from a bug in the implementation and you should definitiely pay attention to them. But how do you know which if any actions are non-deterministic?</p><p>This is not trivial but we have added <a href="/docs/tips/non-deterministic-builds/">a server side feature</a> which allows detection of non-determinism with virtually no effort on your part.</p><p>Once activated it reruns a configured fraction of your actions and automatically flags them if they produce different outputs. The scheduling is done outside of your bazel invocation so your build throughput will be unaffected at the cost of an increase in the number of resources consumed. We suggest 1% which will only increase your resource use by a trivial amount but you could of course set it to 100% which would double the cost of your builds.</p>]]></content>
        <author>
            <name>Benjamin Ingberg</name>
        </author>
        <category label="meroton" term="meroton"/>
        <category label="bazel" term="bazel"/>
        <category label="optimizing" term="optimizing"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Updates to Buildbarn deployment repo]]></title>
        <id>bb-deploy-updates-2022-04</id>
        <link href="https://meroton.github.io/blog/bb-deploy-updates-2022-04"/>
        <updated>2022-05-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The sample configuration project for Buildbarn was recently updated after a long hiatus. As an aid for people to understand which changes have been done see the following high level summary.]]></summary>
        <content type="html"><![CDATA[<p>The <a href="https://github.com/buildbarn/bb-deployments" target="_blank" rel="noopener noreferrer">sample configuration project for Buildbarn</a> was recently updated after a long hiatus. As an aid for people to understand which changes have been done see the following high level summary.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="april-2022-updates">April 2022 Updates<a class="hash-link" href="#april-2022-updates" title="Direct link to heading">​</a></h2><p>This includes updates to Buildbarn since December 2020.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="authorizer-overhaul">Authorizer Overhaul<a class="hash-link" href="#authorizer-overhaul" title="Direct link to heading">​</a></h3><p>Authorizers have been rehauled to be more flexible it is now part of each individual cache and execution configuration.</p><p>Using a JWT authorization bearer token has been added as an authorization method.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="hierarchical-blob-access">Hierarchical Blob Access<a class="hash-link" href="#hierarchical-blob-access" title="Direct link to heading">​</a></h3><p>Using hierarchical blob access allows blobs in instance name <code>foo/bar</code> to be accessed from instance <code>foo/bar/baz</code> but not instance <code>foo</code> or <code>foo/qux</code>.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="action-result-expiration">Action Result Expiration<a class="hash-link" href="#action-result-expiration" title="Direct link to heading">​</a></h3><p>An expiry can be added to action result which lets the action cache purge the result of an exection that was performed too far in the past. This can be used to ensure that all targets are rebuilt periodically even if they are accessed frequently enough to not normally be purged from the cache.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="read-only-cache-replicas">Read Only Cache Replicas<a class="hash-link" href="#read-only-cache-replicas" title="Direct link to heading">​</a></h3><p>Cache read traffic can now be sent to a read-only replica which is periodically probed for availability.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="concurrency-limiting-blob-replication">Concurrency Limiting Blob Replication<a class="hash-link" href="#concurrency-limiting-blob-replication" title="Direct link to heading">​</a></h3><p>Limit the number of concurrent replications to prevent network starvation</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="run-commands-as-another-user">Run Commands as Another User<a class="hash-link" href="#run-commands-as-another-user" title="Direct link to heading">​</a></h3><p>Allows the commands to be run as a different user, on most platforms this means the bb-runner instance must run as root.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="size-class-analysis">Size Class Analysis<a class="hash-link" href="#size-class-analysis" title="Direct link to heading">​</a></h3><p>Allows executors of different size classes to be used, the scheduler will attempt to utilize executors efficiently but there is an inherent tradeof between throughput and latency. Once configured the scheduler will automatically attempt to keep track of which actions are best run on which executors.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="execution-routing-policy">Execution Routing Policy<a class="hash-link" href="#execution-routing-policy" title="Direct link to heading">​</a></h3><p>The scheduler accepts an execution routing policy configuration that allows it to determine how to defer builds to different executors.</p><p>If you see any other changes you feel should get a mention feel free to submit a pull request at github using the link below.</p>]]></content>
        <author>
            <name>Benjamin Ingberg</name>
        </author>
        <category label="meroton" term="meroton"/>
        <category label="release" term="release"/>
        <category label="buildbarn" term="buildbarn"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Purpose of the Articles]]></title>
        <id>about</id>
        <link href="https://meroton.github.io/blog/about"/>
        <updated>2022-02-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The purpose of these articles is to have a freeform area discussing ideas, technical issues, solutions and news in an indepth relaxed manner. It is not to serve as reference material, structured reference material should be available in the documentation section.]]></summary>
        <content type="html"><![CDATA[<p>The purpose of these articles is to have a freeform area discussing ideas, technical issues, solutions and news in an indepth relaxed manner. It is not to serve as reference material, structured reference material should be available in the documentation section.</p><p>The article format allows more in depth on discussions for reacurring subjects. In contrast to the documentation published articles aren't changed, if the subject requires a revisit in the future then we publish a new post and add references to the old.</p><p>If you see any errors feel free to submit a pull request at github using the link below.</p>]]></content>
        <author>
            <name>Benjamin Ingberg</name>
        </author>
        <category label="meroton" term="meroton"/>
    </entry>
</feed>